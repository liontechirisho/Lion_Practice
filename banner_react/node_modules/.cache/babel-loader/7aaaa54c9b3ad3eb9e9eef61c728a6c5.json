{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lion_Practice\\\\bannerreact\\\\src\\\\Banner.js\";\nimport React, { Component } from 'react';\nimport bannerImg from './imgs/banner.png';\nimport Button from './Button';\n\nclass Banner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // openAtStart: true,\n      openAtStart: false,\n      autoToggle: true,\n      button: {\n        closeText: '收合',\n        openText: '展開',\n        class: 'btn'\n      },\n      bannerClasses: {\n        closed: 'closed',\n        closing: 'closing',\n        opened: 'opened',\n        opening: 'opening'\n      },\n      transition: false,\n      // transition: true,\n      transitioning: false,\n      isOpen: true\n    };\n\n    this.toggleBanner = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      console.log(this);\n    };\n\n    this.openAtStart = () => {\n      this.props.openAtStart ? this.setState({\n        isOpen: !this.state.isOpen\n      }) : this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          bannerClasses = _this$state.bannerClasses,\n          isOpen = _this$state.isOpen;\n    const classes = \"banner \".concat(this.state.transition ? 'transition' : '', \" \").concat(isOpen ? bannerClasses.opened : bannerClasses.closed);\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img\",\n      src: bannerImg,\n      title: \"\\u8F38\\u5165\\u5EE3\\u544A\\u4FC3\\u92B7\\u8AAA\\u660E\\u6587\\u5B57\",\n      alt: \"\\u8F38\\u5165\\u5EE3\\u544A\\u4FC3\\u92B7\\u8AAA\\u660E\\u6587\\u5B57\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Button, {\n      btnName: this.props.button.class,\n      toggle: this.toggleBanner,\n      btnText: isOpen ? this.props.button.closeText : this.props.button.openText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Banner;","map":{"version":3,"sources":["D:\\Lion_Practice\\bannerreact\\src\\Banner.js"],"names":["React","Component","bannerImg","Button","Banner","state","openAtStart","autoToggle","button","closeText","openText","class","bannerClasses","closed","closing","opened","opening","transition","transitioning","isOpen","toggleBanner","setState","console","log","props","render","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACJ;AACAC,MAAAA,WAAW,EAAE,KAFT;AAGJC,MAAAA,UAAU,EAAE,IAHR;AAIJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,SAAS,EAAE,IADP;AAEJC,QAAAA,QAAQ,EAAE,IAFN;AAGJC,QAAAA,KAAK,EAAE;AAHH,OAJJ;AASJC,MAAAA,aAAa,EAAE;AACXC,QAAAA,MAAM,EAAE,QADG;AAEXC,QAAAA,OAAO,EAAE,SAFE;AAGXC,QAAAA,MAAM,EAAE,QAHG;AAIXC,QAAAA,OAAO,EAAE;AAJE,OATX;AAeJC,MAAAA,UAAU,EAAE,KAfR;AAgBJ;AACAC,MAAAA,aAAa,EAAE,KAjBX;AAkBJC,MAAAA,MAAM,EAAE;AAlBJ,KADmB;;AAAA,SAqB3BC,YArB2B,GAqBZ,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAtB,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,KAxB0B;;AAAA,SAyB3BjB,WAzB2B,GAyBb,MAAM;AAChB,WAAKkB,KAAL,CAAWlB,WAAX,GAAuB,KAAKe,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAtB,OAAd,CAAvB,GAAqE,KAAKE,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAtB,OAAd,CAArE;AACH,KA3B0B;AAAA;;AA4B3BM,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKpB,KADlC;AAAA,UACGO,aADH,eACGA,aADH;AAAA,UACkBO,MADlB,eACkBA,MADlB;AAEL,UAAMO,OAAO,oBAAa,KAAKrB,KAAL,CAAWY,UAAX,GAAwB,YAAxB,GAAuC,EAApD,cAA0DE,MAAM,GAAGP,aAAa,CAACG,MAAjB,GAA0BH,aAAa,CAACC,MAAxG,CAAb;AACA,WACI;AAAK,MAAA,SAAS,EAAEa,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAExB,SAA1B;AAAqC,MAAA,KAAK,EAAC,8DAA3C;AAAwD,MAAA,GAAG,EAAC,8DAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKsB,KAAL,CAAWhB,MAAX,CAAkBG,KAAnC;AAA0C,MAAA,MAAM,EAAE,KAAKS,YAAvD;AAAqE,MAAA,OAAO,EAAED,MAAM,GAAG,KAAKK,KAAL,CAAWhB,MAAX,CAAkBC,SAArB,GAAiC,KAAKe,KAAL,CAAWhB,MAAX,CAAkBE,QAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAvC0B;;AAyC/B,eAAeN,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport bannerImg from './imgs/banner.png';\r\nimport Button from './Button';\r\n\r\nclass Banner extends Component {\r\n    state = {\r\n        // openAtStart: true,\r\n        openAtStart: false,\r\n        autoToggle: true,\r\n        button: {\r\n            closeText: '收合',\r\n            openText: '展開',\r\n            class: 'btn',\r\n        },\r\n        bannerClasses: {\r\n            closed: 'closed',\r\n            closing: 'closing',\r\n            opened: 'opened',\r\n            opening: 'opening',\r\n        },\r\n        transition: false,\r\n        // transition: true,\r\n        transitioning: false,\r\n        isOpen: true,\r\n    };\r\n    toggleBanner = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n        console.log(this);\r\n    }\r\n    openAtStart = () => {\r\n        this.props.openAtStart?this.setState({ isOpen: !this.state.isOpen }):this.setState({ isOpen: !this.state.isOpen });\r\n    }\r\n    render() {\r\n        const { bannerClasses, isOpen } = this.state;\r\n        const classes = `banner ${this.state.transition ? 'transition' : ''} ${isOpen ? bannerClasses.opened : bannerClasses.closed}`;\r\n        return (\r\n            <div className={classes}>\r\n                <a className=\"wrap\">\r\n                    <img className=\"img\" src={bannerImg} title=\"輸入廣告促銷說明文字\" alt=\"輸入廣告促銷說明文字\" />\r\n                </a>\r\n                <Button btnName={this.props.button.class} toggle={this.toggleBanner} btnText={isOpen ? this.props.button.closeText : this.props.button.openText}></Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Banner;"]},"metadata":{},"sourceType":"module"}