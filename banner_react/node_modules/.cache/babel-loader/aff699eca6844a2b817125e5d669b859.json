{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lion_Practice\\\\bannerreact\\\\src\\\\Banner.js\";\nimport React, { Component } from 'react';\nimport bannerImg from './imgs/banner.png';\nimport Button from './Button';\nimport { setTimeout } from 'timers';\n\nclass Banner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transTime: 600,\n      bannerStat: this.props.openAtStart ? 0 : 2\n    };\n    this.bannerClasses = [this.props.class.opened, this.props.class.closing, this.props.class.closed, this.props.class.opening];\n\n    this.toggleBanner = () => {\n      if (this.props.transition) {\n        if (this.state.bannerStat === 0 || this.state.bannerStat === 2) {\n          this.setState({\n            bannerStat: this.state.bannerStat + 1\n          }, this.ddd);\n        }\n      } else {\n        if (this.state.bannerStat === 0) {\n          this.setState({\n            bannerStat: 2\n          });\n        } else {\n          this.setState({\n            bannerStat: 0\n          });\n        }\n      }\n    };\n\n    this.timer = null;\n    this.counter = 1;\n\n    this.ddd = () => {\n      this.transitioning();\n    };\n\n    this.transitioning = () => {\n      this.timer = setTimeout(this.transitioning, this.state.transTime / 30);\n      this.props.whenTransition();\n      this.counter++;\n    };\n  }\n\n  clearTimer() {\n    if (this.counter > 31) clearTimeout(this.timer);\n  }\n\n  render() {\n    const bannerStat = this.state.bannerStat;\n    let fullClassName = this.props.transition ? 'banner transition ' : 'banner ';\n\n    switch (this.state.bannerStat) {\n      case 0:\n        fullClassName = fullClassName + this.bannerClasses[0];\n        break;\n\n      case 1:\n        fullClassName = fullClassName + this.bannerClasses[1];\n        break;\n\n      case 2:\n        fullClassName = fullClassName + this.bannerClasses[2];\n        break;\n\n      case 3:\n        fullClassName = fullClassName + this.bannerClasses[3];\n        break;\n\n      default:\n        break;\n    }\n\n    return React.createElement(\"div\", {\n      className: fullClassName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img\",\n      src: bannerImg,\n      title: \"\\u8F38\\u5165\\u5EE3\\u544A\\u4FC3\\u92B7\\u8AAA\\u660E\\u6587\\u5B57\",\n      alt: \"\\u8F38\\u5165\\u5EE3\\u544A\\u4FC3\\u92B7\\u8AAA\\u660E\\u6587\\u5B57\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Button, {\n      btnName: this.props.button.class,\n      toggle: this.toggleBanner,\n      btnText: bannerStat === 0 || bannerStat === 3 ? this.props.button.closeText : this.props.button.openText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Banner;","map":{"version":3,"sources":["D:\\Lion_Practice\\bannerreact\\src\\Banner.js"],"names":["React","Component","bannerImg","Button","setTimeout","Banner","state","transTime","bannerStat","props","openAtStart","bannerClasses","class","opened","closing","closed","opening","toggleBanner","transition","setState","ddd","timer","counter","transitioning","whenTransition","clearTimer","clearTimeout","render","fullClassName","button","closeText","openText"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport bannerImg from './imgs/banner.png';\r\nimport Button from './Button';\r\nimport { setTimeout } from 'timers';\r\n\r\nclass Banner extends Component {\r\n    state = {\r\n        transTime: 600,\r\n        bannerStat: this.props.openAtStart ? 0 : 2\r\n    };\r\n    bannerClasses = [this.props.class.opened, this.props.class.closing, this.props.class.closed, this.props.class.opening];\r\n    toggleBanner = () => {\r\n        if (this.props.transition) {\r\n            if (this.state.bannerStat === 0 || this.state.bannerStat === 2) {\r\n                this.setState({ bannerStat: this.state.bannerStat + 1 }, this.ddd);\r\n            }\r\n        } else {\r\n            if (this.state.bannerStat === 0) {\r\n                this.setState({ bannerStat: 2 })\r\n            } else {\r\n                this.setState({ bannerStat: 0 })\r\n            }\r\n        }\r\n    }\r\n    timer = null;\r\n    counter = 1;\r\n    ddd = ()=>{\r\n        this.transitioning();\r\n    }\r\n    transitioning = () => {\r\n        this.timer = setTimeout(\r\n            this.transitioning, this.state.transTime / 30\r\n        );\r\n        this.props.whenTransition();\r\n        this.counter++;\r\n    }\r\n    clearTimer(){\r\n        if (this.counter > 31) clearTimeout(this.timer);\r\n    }\r\n    render() {\r\n        const { bannerStat } = this.state;\r\n        let fullClassName = this.props.transition ? 'banner transition ' : 'banner ';\r\n\r\n        switch (this.state.bannerStat) {\r\n            case 0:\r\n                fullClassName = fullClassName + this.bannerClasses[0]\r\n                break;\r\n            case 1:\r\n                fullClassName = fullClassName + this.bannerClasses[1]\r\n                break;\r\n            case 2:\r\n                fullClassName = fullClassName + this.bannerClasses[2]\r\n                break;\r\n            case 3:\r\n                fullClassName = fullClassName + this.bannerClasses[3]\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return (\r\n            <div className={fullClassName}>\r\n                <a className=\"wrap\">\r\n                    <img className=\"img\" src={bannerImg} title=\"輸入廣告促銷說明文字\" alt=\"輸入廣告促銷說明文字\" />\r\n                </a>\r\n                <Button btnName={this.props.button.class} toggle={this.toggleBanner} btnText={bannerStat === 0 || bannerStat === 3 ? this.props.button.closeText : this.props.button.openText}></Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Banner;"]},"metadata":{},"sourceType":"module"}