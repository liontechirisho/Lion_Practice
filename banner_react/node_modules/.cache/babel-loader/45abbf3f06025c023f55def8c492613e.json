{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lion_Practice\\\\bannerreact\\\\src\\\\Button.js\";\nimport React, { Component } from 'react';\n\nclass Button extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isOpen: true,\n      closeText: '收合',\n      openText: '展開',\n      class: 'btn'\n    };\n\n    this.toggleBtn = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          isOpen = _this$props.isOpen,\n          toggleBtn = _this$props.toggleBtn;\n    return React.createElement(\"div\", {\n      className: this.state.class,\n      onClick: this.props.toggleBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, isOpen ? this.state.closeText : this.state.openText);\n  }\n\n}\n\nexport default Button;","map":{"version":3,"sources":["D:\\Lion_Practice\\bannerreact\\src\\Button.js"],"names":["React","Component","Button","state","isOpen","closeText","openText","class","toggleBtn","setState","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,KAD2B,GACnB;AACJC,MAAAA,MAAM,EAAE,IADJ;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,KAAK,EAAE;AAJH,KADmB;;AAAA,SAO3BC,SAP2B,GAOf,MAAM;AACd,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,OAAd;AACD,KATwB;AAAA;;AAU3BM,EAAAA,MAAM,GAAG;AAAA,wBACyB,KAAKC,KAD9B;AAAA,UACGP,MADH,eACGA,MADH;AAAA,UACWI,SADX,eACWA,SADX;AAEL,WACI;AAAK,MAAA,SAAS,EAAE,KAAKL,KAAL,CAAWI,KAA3B;AAAkC,MAAA,OAAO,EAAE,KAAKI,KAAL,CAAWH,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkEJ,MAAM,GAAG,KAAKD,KAAL,CAAWE,SAAd,GAA0B,KAAKF,KAAL,CAAWG,QAA7G,CADJ;AAGH;;AAf0B;;AAiB/B,eAAeJ,MAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Button extends Component {\r\n    state = {\r\n        isOpen: true,\r\n        closeText: '收合',\r\n        openText: '展開',\r\n        class: 'btn',\r\n    }\r\n    toggleBtn = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n      }\r\n    render() {\r\n        const { isOpen, toggleBtn } = this.props;\r\n        return (\r\n            <div className={this.state.class} onClick={this.props.toggleBtn}>{isOpen ? this.state.closeText : this.state.openText}</div>\r\n        )\r\n    }\r\n}\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}