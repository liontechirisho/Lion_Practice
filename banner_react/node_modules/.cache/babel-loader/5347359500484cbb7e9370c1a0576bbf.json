{"ast":null,"code":"var _jsxFileName = \"D:\\\\Lion_Practice\\\\bannerreact\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport bannerImg from './imgs/banner.png';\nimport Button from './Button';\nimport './css/main.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // openAtStart: true,\n      openAtStart: false,\n      autoToggle: true,\n      button: {\n        closeText: '收合',\n        openText: '展開',\n        class: 'btn'\n      },\n      bannerClasses: {\n        closed: 'closed',\n        closing: 'closing',\n        opened: 'opened',\n        opening: 'opening'\n      },\n      transition: false,\n      // transition: true,\n      transitioning: false,\n      isOpen: true\n    };\n\n    this.toggleBanner = () => {\n      this.state.transition ? this.setState({\n        transitioning: !this.state.transitioning\n      }) : this.setState({\n        isOpen: !this.state.isOpen\n      });\n      ;\n    };\n\n    this.toggleBtn = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n      console.log(this);\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          openAtStart = _this$state.openAtStart,\n          bannerClasses = _this$state.bannerClasses,\n          isOpen = _this$state.isOpen;\n    const classes = \"banner \".concat(this.state.transition ? 'transition' : '', \" \").concat(isOpen && openAtStart ? bannerClasses.opened : bannerClasses.closed);\n    return React.createElement(\"div\", {\n      className: classes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img\",\n      src: bannerImg,\n      title: \"\\u8F38\\u5165\\u5EE3\\u544A\\u4FC3\\u92B7\\u8AAA\\u660E\\u6587\\u5B57\",\n      alt: \"\\u8F38\\u5165\\u5EE3\\u544A\\u4FC3\\u92B7\\u8AAA\\u660E\\u6587\\u5B57\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.toggleBtn,\n      isOpen: isOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\Lion_Practice\\bannerreact\\src\\App.js"],"names":["React","Component","bannerImg","Button","App","state","openAtStart","autoToggle","button","closeText","openText","class","bannerClasses","closed","closing","opened","opening","transition","transitioning","isOpen","toggleBanner","setState","toggleBtn","console","log","render","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,gBAAP;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACN;AACAC,MAAAA,WAAW,EAAE,KAFP;AAGNC,MAAAA,UAAU,EAAE,IAHN;AAINC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE,IADL;AAENC,QAAAA,QAAQ,EAAE,IAFJ;AAGNC,QAAAA,KAAK,EAAE;AAHD,OAJF;AASNC,MAAAA,aAAa,EAAE;AACbC,QAAAA,MAAM,EAAE,QADK;AAEbC,QAAAA,OAAO,EAAE,SAFI;AAGbC,QAAAA,MAAM,EAAE,QAHK;AAIbC,QAAAA,OAAO,EAAE;AAJI,OATT;AAeNC,MAAAA,UAAU,EAAE,KAfN;AAgBN;AACAC,MAAAA,aAAa,EAAE,KAjBT;AAkBNC,MAAAA,MAAM,EAAE;AAlBF,KADkB;;AAAA,SAqB1BC,YArB0B,GAqBX,MAAM;AACnB,WAAKf,KAAL,CAAWY,UAAX,GAAwB,KAAKI,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAE,CAAC,KAAKb,KAAL,CAAWa;AAA7B,OAAd,CAAxB,GAAsF,KAAKG,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAtB,OAAd,CAAtF;AAAoI;AACrI,KAvByB;;AAAA,SAwB1BG,SAxB0B,GAwBd,MAAM;AAChB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,MAAM,EAAE,CAAC,KAAKd,KAAL,CAAWc;AAAtB,OAAd;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KA3ByB;AAAA;;AA4B1BC,EAAAA,MAAM,GAAG;AAAA,wBACwC,KAAKpB,KAD7C;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcM,aADd,eACcA,aADd;AAAA,UAC6BO,MAD7B,eAC6BA,MAD7B;AAEP,UAAMO,OAAO,oBAAa,KAAKrB,KAAL,CAAWY,UAAX,GAAwB,YAAxB,GAAuC,EAApD,cAA0DE,MAAM,IAAIb,WAAV,GAAwBM,aAAa,CAACG,MAAtC,GAA+CH,aAAa,CAACC,MAAvH,CAAb;AACA,WACE;AAAK,MAAA,SAAS,EAAEa,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,GAAG,EAAExB,SAA1B;AAAqC,MAAA,KAAK,EAAC,8DAA3C;AAAwD,MAAA,GAAG,EAAC,8DAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKoB,SAAtB;AAAiC,MAAA,MAAM,EAAEH,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AAxCyB;;AA2C5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport bannerImg from './imgs/banner.png';\nimport Button from './Button';\nimport './css/main.css';\n\nclass App extends Component {\n  state = {\n    // openAtStart: true,\n    openAtStart: false,\n    autoToggle: true,\n    button: {\n      closeText: '收合',\n      openText: '展開',\n      class: 'btn',\n    },\n    bannerClasses: {\n      closed: 'closed',\n      closing: 'closing',\n      opened: 'opened',\n      opening: 'opening',\n    },\n    transition: false,\n    // transition: true,\n    transitioning: false,\n    isOpen: true,\n  };\n  toggleBanner = () => {\n    this.state.transition ? this.setState({ transitioning: !this.state.transitioning }) : this.setState({ isOpen: !this.state.isOpen });;\n  }\n  toggleBtn = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n    console.log(this)\n  }\n  render() {\n    const { openAtStart, bannerClasses, isOpen } = this.state;\n    const classes = `banner ${this.state.transition ? 'transition' : ''} ${isOpen && openAtStart ? bannerClasses.opened : bannerClasses.closed}`;\n    return (\n      <div className={classes}>\n        <a className=\"wrap\">\n          <img className=\"img\" src={bannerImg} title=\"輸入廣告促銷說明文字\" alt=\"輸入廣告促銷說明文字\" />\n        </a>\n        {/* <div className={this.state.button.class} onClick={this.toggleBtn}>{this.state.isOpen ? this.state.button.closeText : this.state.button.openText}</div> */}\n        <Button onClick={this.toggleBtn} isOpen={isOpen}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}